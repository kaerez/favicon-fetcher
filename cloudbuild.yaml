steps:
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/favicon-fetcher:$COMMIT_SHA', '.']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/favicon-fetcher:$COMMIT_SHA']
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gcloud'
  args:
  - 'run'
  - 'deploy'
  - 'favicon-fetcher'
  - '--image=gcr.io/$PROJECT_ID/favicon-fetcher:$COMMIT_SHA'
  - '--platform=managed'
  - '--region=us-central1'
  - '--allow-unauthenticated'
  - '--port=8080'
  # --- Environment Variables ---
  # The --set-env-vars flag is a comma-separated list of KEY=VALUE pairs.
  # For GCP, the rate limit values MUST use a semicolon (;) as the separator instead of a comma.
  #
  # Uncomment and modify one of the examples below for your deployment.
  # You must provide a line starting with '--set-env-vars=' for the deployment to have your custom config.

  # Example 1: Using Google Memorystore (no password) and a sample API key
  # - '--set-env-vars=NODE_ENV=production,LIMIT_SEPARATOR=semicolon,REDIS_URL=redis://10.0.0.3:6379,AUTHN0=your-secure-api-key,LIMIT0=rps:10;rpm:500'

  # Example 2: Using an external Redis provider (e.g., Aiven, Redis Labs) with a username and password
  # Note: If your password contains special characters (@, :, /, #, ?), they MUST be URL-encoded.
  # For example, a password like 'p@ss#word' must be written as 'p%40ss%23word' in the URL.
  # - '--set-env-vars=NODE_ENV=production,LIMIT_SEPARATOR=semicolon,REDIS_URL=rediss://default:p%40ss%23word@my-redis-provider.com:12345,AUTHN0=your-secure-api-key,LIMIT0=rps:10;rpm:500'

images:
- 'gcr.io/$PROJECT_ID/favicon-fetcher:$COMMIT_SHA'

